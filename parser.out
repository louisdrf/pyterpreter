Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> increment COLON
Rule 5     inst -> add_assign COLON
Rule 6     increment -> NAME PLUS PLUS
Rule 7     add_assign -> NAME PLUS EQUAL expression
Rule 8     inst -> assign COLON
Rule 9     assign -> NAME EQUAL expression
Rule 10    inst -> WHILE LPAREN condition RPAREN b_bloc
Rule 11    inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
Rule 12    inst -> IF LPAREN condition RPAREN b_bloc
Rule 13    condition -> expression EQUALS expression
Rule 14    condition -> expression LOWER expression
Rule 15    condition -> expression HIGHER expression
Rule 16    condition -> expression OR expression
Rule 17    condition -> expression AND expression
Rule 18    expression -> expression PLUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> expression MINUS expression
Rule 22    inst -> PRINT LPAREN expression RPAREN COLON
Rule 23    b_bloc -> LBRACKET linst RBRACKET
Rule 24    expression -> LPAREN expression RPAREN
Rule 25    expression -> NUMBER
Rule 26    expression -> NAME

Terminals, with rules where they appear

AND                  : 17
COLON                : 4 5 8 11 11 22
DIVIDE               : 20
EQUAL                : 7 9
EQUALS               : 13
FOR                  : 11
HIGHER               : 15
IF                   : 12
LBRACKET             : 23
LOWER                : 14
LPAREN               : 10 11 12 22 24
MINUS                : 21
NAME                 : 6 7 9 26
NUMBER               : 25
OR                   : 16
PLUS                 : 6 6 7 18
PRINT                : 22
RBRACKET             : 23
RPAREN               : 10 11 12 22 24
THEN                 : 
TIMES                : 19
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

add_assign           : 5
assign               : 8 11
b_bloc               : 10 11 12
condition            : 10 11 12
expression           : 7 9 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 24
increment            : 4 11
inst                 : 2 3
linst                : 1 2 23
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . WHILE LPAREN condition RPAREN b_bloc
    (11) inst -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (12) inst -> . IF LPAREN condition RPAREN b_bloc
    (22) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    NAME            shift and go to state 11

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . WHILE LPAREN condition RPAREN b_bloc
    (11) inst -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (12) inst -> . IF LPAREN condition RPAREN b_bloc
    (22) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression

    $end            reduce using rule 1 (start -> linst .)
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    NAME            shift and go to state 11

    inst                           shift and go to state 12
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6

state 3

    (3) linst -> inst .

    WHILE           reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    PRINT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> increment . COLON

    COLON           shift and go to state 13


state 5

    (5) inst -> add_assign . COLON

    COLON           shift and go to state 14


state 6

    (8) inst -> assign . COLON

    COLON           shift and go to state 15


state 7

    (10) inst -> WHILE . LPAREN condition RPAREN b_bloc

    LPAREN          shift and go to state 16


state 8

    (11) inst -> FOR . LPAREN assign COLON condition COLON increment RPAREN b_bloc

    LPAREN          shift and go to state 17


state 9

    (12) inst -> IF . LPAREN condition RPAREN b_bloc

    LPAREN          shift and go to state 18


state 10

    (22) inst -> PRINT . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 19


state 11

    (6) increment -> NAME . PLUS PLUS
    (7) add_assign -> NAME . PLUS EQUAL expression
    (9) assign -> NAME . EQUAL expression

    PLUS            shift and go to state 20
    EQUAL           shift and go to state 21


state 12

    (2) linst -> linst inst .

    WHILE           reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    PRINT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)


state 13

    (4) inst -> increment COLON .

    WHILE           reduce using rule 4 (inst -> increment COLON .)
    FOR             reduce using rule 4 (inst -> increment COLON .)
    IF              reduce using rule 4 (inst -> increment COLON .)
    PRINT           reduce using rule 4 (inst -> increment COLON .)
    NAME            reduce using rule 4 (inst -> increment COLON .)
    $end            reduce using rule 4 (inst -> increment COLON .)
    RBRACKET        reduce using rule 4 (inst -> increment COLON .)


state 14

    (5) inst -> add_assign COLON .

    WHILE           reduce using rule 5 (inst -> add_assign COLON .)
    FOR             reduce using rule 5 (inst -> add_assign COLON .)
    IF              reduce using rule 5 (inst -> add_assign COLON .)
    PRINT           reduce using rule 5 (inst -> add_assign COLON .)
    NAME            reduce using rule 5 (inst -> add_assign COLON .)
    $end            reduce using rule 5 (inst -> add_assign COLON .)
    RBRACKET        reduce using rule 5 (inst -> add_assign COLON .)


state 15

    (8) inst -> assign COLON .

    WHILE           reduce using rule 8 (inst -> assign COLON .)
    FOR             reduce using rule 8 (inst -> assign COLON .)
    IF              reduce using rule 8 (inst -> assign COLON .)
    PRINT           reduce using rule 8 (inst -> assign COLON .)
    NAME            reduce using rule 8 (inst -> assign COLON .)
    $end            reduce using rule 8 (inst -> assign COLON .)
    RBRACKET        reduce using rule 8 (inst -> assign COLON .)


state 16

    (10) inst -> WHILE LPAREN . condition RPAREN b_bloc
    (13) condition -> . expression EQUALS expression
    (14) condition -> . expression LOWER expression
    (15) condition -> . expression HIGHER expression
    (16) condition -> . expression OR expression
    (17) condition -> . expression AND expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    condition                      shift and go to state 23
    expression                     shift and go to state 24

state 17

    (11) inst -> FOR LPAREN . assign COLON condition COLON increment RPAREN b_bloc
    (9) assign -> . NAME EQUAL expression

    NAME            shift and go to state 28

    assign                         shift and go to state 27

state 18

    (12) inst -> IF LPAREN . condition RPAREN b_bloc
    (13) condition -> . expression EQUALS expression
    (14) condition -> . expression LOWER expression
    (15) condition -> . expression HIGHER expression
    (16) condition -> . expression OR expression
    (17) condition -> . expression AND expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    condition                      shift and go to state 29
    expression                     shift and go to state 24

state 19

    (22) inst -> PRINT LPAREN . expression RPAREN COLON
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 30

state 20

    (6) increment -> NAME PLUS . PLUS
    (7) add_assign -> NAME PLUS . EQUAL expression

    PLUS            shift and go to state 31
    EQUAL           shift and go to state 32


state 21

    (9) assign -> NAME EQUAL . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 33

state 22

    (24) expression -> LPAREN . expression RPAREN
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 34

state 23

    (10) inst -> WHILE LPAREN condition . RPAREN b_bloc

    RPAREN          shift and go to state 35


state 24

    (13) condition -> expression . EQUALS expression
    (14) condition -> expression . LOWER expression
    (15) condition -> expression . HIGHER expression
    (16) condition -> expression . OR expression
    (17) condition -> expression . AND expression
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    EQUALS          shift and go to state 36
    LOWER           shift and go to state 37
    HIGHER          shift and go to state 38
    OR              shift and go to state 39
    AND             shift and go to state 40
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 25

    (25) expression -> NUMBER .

    EQUALS          reduce using rule 25 (expression -> NUMBER .)
    LOWER           reduce using rule 25 (expression -> NUMBER .)
    HIGHER          reduce using rule 25 (expression -> NUMBER .)
    OR              reduce using rule 25 (expression -> NUMBER .)
    AND             reduce using rule 25 (expression -> NUMBER .)
    PLUS            reduce using rule 25 (expression -> NUMBER .)
    TIMES           reduce using rule 25 (expression -> NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> NUMBER .)
    MINUS           reduce using rule 25 (expression -> NUMBER .)
    RPAREN          reduce using rule 25 (expression -> NUMBER .)
    COLON           reduce using rule 25 (expression -> NUMBER .)


state 26

    (26) expression -> NAME .

    EQUALS          reduce using rule 26 (expression -> NAME .)
    LOWER           reduce using rule 26 (expression -> NAME .)
    HIGHER          reduce using rule 26 (expression -> NAME .)
    OR              reduce using rule 26 (expression -> NAME .)
    AND             reduce using rule 26 (expression -> NAME .)
    PLUS            reduce using rule 26 (expression -> NAME .)
    TIMES           reduce using rule 26 (expression -> NAME .)
    DIVIDE          reduce using rule 26 (expression -> NAME .)
    MINUS           reduce using rule 26 (expression -> NAME .)
    RPAREN          reduce using rule 26 (expression -> NAME .)
    COLON           reduce using rule 26 (expression -> NAME .)


state 27

    (11) inst -> FOR LPAREN assign . COLON condition COLON increment RPAREN b_bloc

    COLON           shift and go to state 45


state 28

    (9) assign -> NAME . EQUAL expression

    EQUAL           shift and go to state 21


state 29

    (12) inst -> IF LPAREN condition . RPAREN b_bloc

    RPAREN          shift and go to state 46


state 30

    (22) inst -> PRINT LPAREN expression . RPAREN COLON
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          shift and go to state 47
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 31

    (6) increment -> NAME PLUS PLUS .

    COLON           reduce using rule 6 (increment -> NAME PLUS PLUS .)
    RPAREN          reduce using rule 6 (increment -> NAME PLUS PLUS .)


state 32

    (7) add_assign -> NAME PLUS EQUAL . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 48

state 33

    (9) assign -> NAME EQUAL expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    COLON           reduce using rule 9 (assign -> NAME EQUAL expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 34

    (24) expression -> LPAREN expression . RPAREN
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          shift and go to state 49
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 35

    (10) inst -> WHILE LPAREN condition RPAREN . b_bloc
    (23) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 51

    b_bloc                         shift and go to state 50

state 36

    (13) condition -> expression EQUALS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 52

state 37

    (14) condition -> expression LOWER . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 53

state 38

    (15) condition -> expression HIGHER . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 54

state 39

    (16) condition -> expression OR . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 55

state 40

    (17) condition -> expression AND . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 56

state 41

    (18) expression -> expression PLUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 57

state 42

    (19) expression -> expression TIMES . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 58

state 43

    (20) expression -> expression DIVIDE . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 59

state 44

    (21) expression -> expression MINUS . expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    expression                     shift and go to state 60

state 45

    (11) inst -> FOR LPAREN assign COLON . condition COLON increment RPAREN b_bloc
    (13) condition -> . expression EQUALS expression
    (14) condition -> . expression LOWER expression
    (15) condition -> . expression HIGHER expression
    (16) condition -> . expression OR expression
    (17) condition -> . expression AND expression
    (18) expression -> . expression PLUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression MINUS expression
    (24) expression -> . LPAREN expression RPAREN
    (25) expression -> . NUMBER
    (26) expression -> . NAME

    LPAREN          shift and go to state 22
    NUMBER          shift and go to state 25
    NAME            shift and go to state 26

    condition                      shift and go to state 61
    expression                     shift and go to state 24

state 46

    (12) inst -> IF LPAREN condition RPAREN . b_bloc
    (23) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 51

    b_bloc                         shift and go to state 62

state 47

    (22) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 63


state 48

    (7) add_assign -> NAME PLUS EQUAL expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    COLON           reduce using rule 7 (add_assign -> NAME PLUS EQUAL expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 49

    (24) expression -> LPAREN expression RPAREN .

    EQUALS          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 24 (expression -> LPAREN expression RPAREN .)


state 50

    (10) inst -> WHILE LPAREN condition RPAREN b_bloc .

    WHILE           reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    FOR             reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    IF              reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    PRINT           reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    NAME            reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    $end            reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)
    RBRACKET        reduce using rule 10 (inst -> WHILE LPAREN condition RPAREN b_bloc .)


state 51

    (23) b_bloc -> LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . WHILE LPAREN condition RPAREN b_bloc
    (11) inst -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (12) inst -> . IF LPAREN condition RPAREN b_bloc
    (22) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression

    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    NAME            shift and go to state 11

    linst                          shift and go to state 64
    inst                           shift and go to state 3
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6

state 52

    (13) condition -> expression EQUALS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          reduce using rule 13 (condition -> expression EQUALS expression .)
    COLON           reduce using rule 13 (condition -> expression EQUALS expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 53

    (14) condition -> expression LOWER expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          reduce using rule 14 (condition -> expression LOWER expression .)
    COLON           reduce using rule 14 (condition -> expression LOWER expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 54

    (15) condition -> expression HIGHER expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          reduce using rule 15 (condition -> expression HIGHER expression .)
    COLON           reduce using rule 15 (condition -> expression HIGHER expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 55

    (16) condition -> expression OR expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          reduce using rule 16 (condition -> expression OR expression .)
    COLON           reduce using rule 16 (condition -> expression OR expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 56

    (17) condition -> expression AND expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    RPAREN          reduce using rule 17 (condition -> expression AND expression .)
    COLON           reduce using rule 17 (condition -> expression AND expression .)
    PLUS            shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MINUS           shift and go to state 44


state 57

    (18) expression -> expression PLUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    EQUALS          reduce using rule 18 (expression -> expression PLUS expression .)
    LOWER           reduce using rule 18 (expression -> expression PLUS expression .)
    HIGHER          reduce using rule 18 (expression -> expression PLUS expression .)
    OR              reduce using rule 18 (expression -> expression PLUS expression .)
    AND             reduce using rule 18 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 18 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 18 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression PLUS expression .)
    COLON           reduce using rule 18 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43

  ! TIMES           [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 44 ]


state 58

    (19) expression -> expression TIMES expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    EQUALS          reduce using rule 19 (expression -> expression TIMES expression .)
    LOWER           reduce using rule 19 (expression -> expression TIMES expression .)
    HIGHER          reduce using rule 19 (expression -> expression TIMES expression .)
    OR              reduce using rule 19 (expression -> expression TIMES expression .)
    AND             reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    COLON           reduce using rule 19 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]


state 59

    (20) expression -> expression DIVIDE expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    EQUALS          reduce using rule 20 (expression -> expression DIVIDE expression .)
    LOWER           reduce using rule 20 (expression -> expression DIVIDE expression .)
    HIGHER          reduce using rule 20 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 20 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]


state 60

    (21) expression -> expression MINUS expression .
    (18) expression -> expression . PLUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . MINUS expression

    EQUALS          reduce using rule 21 (expression -> expression MINUS expression .)
    LOWER           reduce using rule 21 (expression -> expression MINUS expression .)
    HIGHER          reduce using rule 21 (expression -> expression MINUS expression .)
    OR              reduce using rule 21 (expression -> expression MINUS expression .)
    AND             reduce using rule 21 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS expression .)
    COLON           reduce using rule 21 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43

  ! TIMES           [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 44 ]


state 61

    (11) inst -> FOR LPAREN assign COLON condition . COLON increment RPAREN b_bloc

    COLON           shift and go to state 65


state 62

    (12) inst -> IF LPAREN condition RPAREN b_bloc .

    WHILE           reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    FOR             reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    IF              reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    PRINT           reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    NAME            reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    $end            reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)
    RBRACKET        reduce using rule 12 (inst -> IF LPAREN condition RPAREN b_bloc .)


state 63

    (22) inst -> PRINT LPAREN expression RPAREN COLON .

    WHILE           reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 22 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 64

    (23) b_bloc -> LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . WHILE LPAREN condition RPAREN b_bloc
    (11) inst -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (12) inst -> . IF LPAREN condition RPAREN b_bloc
    (22) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression

    RBRACKET        shift and go to state 66
    WHILE           shift and go to state 7
    FOR             shift and go to state 8
    IF              shift and go to state 9
    PRINT           shift and go to state 10
    NAME            shift and go to state 11

    inst                           shift and go to state 12
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6

state 65

    (11) inst -> FOR LPAREN assign COLON condition COLON . increment RPAREN b_bloc
    (6) increment -> . NAME PLUS PLUS

    NAME            shift and go to state 68

    increment                      shift and go to state 67

state 66

    (23) b_bloc -> LBRACKET linst RBRACKET .

    WHILE           reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    FOR             reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    IF              reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    PRINT           reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    NAME            reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    $end            reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 23 (b_bloc -> LBRACKET linst RBRACKET .)


state 67

    (11) inst -> FOR LPAREN assign COLON condition COLON increment . RPAREN b_bloc

    RPAREN          shift and go to state 69


state 68

    (6) increment -> NAME . PLUS PLUS

    PLUS            shift and go to state 70


state 69

    (11) inst -> FOR LPAREN assign COLON condition COLON increment RPAREN . b_bloc
    (23) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 51

    b_bloc                         shift and go to state 71

state 70

    (6) increment -> NAME PLUS . PLUS

    PLUS            shift and go to state 31


state 71

    (11) inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .

    WHILE           reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    FOR             reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    IF              reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    PRINT           reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    NAME            reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    $end            reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    RBRACKET        reduce using rule 11 (inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)

