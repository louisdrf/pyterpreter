Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN

Grammar

Rule 0     S' -> start
Rule 1     start -> linst
Rule 2     linst -> linst inst
Rule 3     linst -> inst
Rule 4     inst -> increment COLON
Rule 5     inst -> add_assign COLON
Rule 6     increment -> NAME PLUS PLUS
Rule 7     add_assign -> NAME PLUS EQUAL expression
Rule 8     inst -> assign COLON
Rule 9     assign -> NAME EQUAL expression
Rule 10    inst -> while
Rule 11    inst -> for
Rule 12    while -> WHILE LPAREN condition RPAREN b_bloc
Rule 13    for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
Rule 14    inst -> if
Rule 15    if -> IF LPAREN condition RPAREN b_bloc
Rule 16    condition -> expression EQUALS expression
Rule 17    condition -> expression LOWER expression
Rule 18    condition -> expression HIGHER expression
Rule 19    condition -> expression OR expression
Rule 20    condition -> expression AND expression
Rule 21    expression -> expression PLUS expression
Rule 22    expression -> expression TIMES expression
Rule 23    expression -> expression DIVIDE expression
Rule 24    expression -> expression MINUS expression
Rule 25    inst -> PRINT LPAREN expression RPAREN COLON
Rule 26    b_bloc -> LBRACKET linst RBRACKET
Rule 27    expression -> LPAREN expression RPAREN
Rule 28    expression -> NUMBER
Rule 29    expression -> NAME

Terminals, with rules where they appear

AND                  : 20
COLON                : 4 5 8 13 13 25
DIVIDE               : 23
EQUAL                : 7 9
EQUALS               : 16
FOR                  : 13
HIGHER               : 18
IF                   : 15
LBRACKET             : 26
LOWER                : 17
LPAREN               : 12 13 15 25 27
MINUS                : 24
NAME                 : 6 7 9 29
NUMBER               : 28
OR                   : 19
PLUS                 : 6 6 7 21
PRINT                : 25
RBRACKET             : 26
RPAREN               : 12 13 15 25 27
THEN                 : 
TIMES                : 22
WHILE                : 12
error                : 

Nonterminals, with rules where they appear

add_assign           : 5
assign               : 8 13
b_bloc               : 12 13 15
condition            : 12 13 15
expression           : 7 9 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 27
for                  : 11
if                   : 14
increment            : 4 13
inst                 : 2 3
linst                : 1 2 26
start                : 0
while                : 10

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . linst
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . while
    (11) inst -> . for
    (14) inst -> . if
    (25) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression
    (12) while -> . WHILE LPAREN condition RPAREN b_bloc
    (13) for -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (15) if -> . IF LPAREN condition RPAREN b_bloc

    PRINT           shift and go to state 10
    NAME            shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14

    start                          shift and go to state 1
    linst                          shift and go to state 2
    inst                           shift and go to state 3
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9

state 1

    (0) S' -> start .



state 2

    (1) start -> linst .
    (2) linst -> linst . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . while
    (11) inst -> . for
    (14) inst -> . if
    (25) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression
    (12) while -> . WHILE LPAREN condition RPAREN b_bloc
    (13) for -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (15) if -> . IF LPAREN condition RPAREN b_bloc

    $end            reduce using rule 1 (start -> linst .)
    PRINT           shift and go to state 10
    NAME            shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14

    inst                           shift and go to state 15
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9

state 3

    (3) linst -> inst .

    PRINT           reduce using rule 3 (linst -> inst .)
    NAME            reduce using rule 3 (linst -> inst .)
    WHILE           reduce using rule 3 (linst -> inst .)
    FOR             reduce using rule 3 (linst -> inst .)
    IF              reduce using rule 3 (linst -> inst .)
    $end            reduce using rule 3 (linst -> inst .)
    RBRACKET        reduce using rule 3 (linst -> inst .)


state 4

    (4) inst -> increment . COLON

    COLON           shift and go to state 16


state 5

    (5) inst -> add_assign . COLON

    COLON           shift and go to state 17


state 6

    (8) inst -> assign . COLON

    COLON           shift and go to state 18


state 7

    (10) inst -> while .

    PRINT           reduce using rule 10 (inst -> while .)
    NAME            reduce using rule 10 (inst -> while .)
    WHILE           reduce using rule 10 (inst -> while .)
    FOR             reduce using rule 10 (inst -> while .)
    IF              reduce using rule 10 (inst -> while .)
    $end            reduce using rule 10 (inst -> while .)
    RBRACKET        reduce using rule 10 (inst -> while .)


state 8

    (11) inst -> for .

    PRINT           reduce using rule 11 (inst -> for .)
    NAME            reduce using rule 11 (inst -> for .)
    WHILE           reduce using rule 11 (inst -> for .)
    FOR             reduce using rule 11 (inst -> for .)
    IF              reduce using rule 11 (inst -> for .)
    $end            reduce using rule 11 (inst -> for .)
    RBRACKET        reduce using rule 11 (inst -> for .)


state 9

    (14) inst -> if .

    PRINT           reduce using rule 14 (inst -> if .)
    NAME            reduce using rule 14 (inst -> if .)
    WHILE           reduce using rule 14 (inst -> if .)
    FOR             reduce using rule 14 (inst -> if .)
    IF              reduce using rule 14 (inst -> if .)
    $end            reduce using rule 14 (inst -> if .)
    RBRACKET        reduce using rule 14 (inst -> if .)


state 10

    (25) inst -> PRINT . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 19


state 11

    (6) increment -> NAME . PLUS PLUS
    (7) add_assign -> NAME . PLUS EQUAL expression
    (9) assign -> NAME . EQUAL expression

    PLUS            shift and go to state 20
    EQUAL           shift and go to state 21


state 12

    (12) while -> WHILE . LPAREN condition RPAREN b_bloc

    LPAREN          shift and go to state 22


state 13

    (13) for -> FOR . LPAREN assign COLON condition COLON increment RPAREN b_bloc

    LPAREN          shift and go to state 23


state 14

    (15) if -> IF . LPAREN condition RPAREN b_bloc

    LPAREN          shift and go to state 24


state 15

    (2) linst -> linst inst .

    PRINT           reduce using rule 2 (linst -> linst inst .)
    NAME            reduce using rule 2 (linst -> linst inst .)
    WHILE           reduce using rule 2 (linst -> linst inst .)
    FOR             reduce using rule 2 (linst -> linst inst .)
    IF              reduce using rule 2 (linst -> linst inst .)
    $end            reduce using rule 2 (linst -> linst inst .)
    RBRACKET        reduce using rule 2 (linst -> linst inst .)


state 16

    (4) inst -> increment COLON .

    PRINT           reduce using rule 4 (inst -> increment COLON .)
    NAME            reduce using rule 4 (inst -> increment COLON .)
    WHILE           reduce using rule 4 (inst -> increment COLON .)
    FOR             reduce using rule 4 (inst -> increment COLON .)
    IF              reduce using rule 4 (inst -> increment COLON .)
    $end            reduce using rule 4 (inst -> increment COLON .)
    RBRACKET        reduce using rule 4 (inst -> increment COLON .)


state 17

    (5) inst -> add_assign COLON .

    PRINT           reduce using rule 5 (inst -> add_assign COLON .)
    NAME            reduce using rule 5 (inst -> add_assign COLON .)
    WHILE           reduce using rule 5 (inst -> add_assign COLON .)
    FOR             reduce using rule 5 (inst -> add_assign COLON .)
    IF              reduce using rule 5 (inst -> add_assign COLON .)
    $end            reduce using rule 5 (inst -> add_assign COLON .)
    RBRACKET        reduce using rule 5 (inst -> add_assign COLON .)


state 18

    (8) inst -> assign COLON .

    PRINT           reduce using rule 8 (inst -> assign COLON .)
    NAME            reduce using rule 8 (inst -> assign COLON .)
    WHILE           reduce using rule 8 (inst -> assign COLON .)
    FOR             reduce using rule 8 (inst -> assign COLON .)
    IF              reduce using rule 8 (inst -> assign COLON .)
    $end            reduce using rule 8 (inst -> assign COLON .)
    RBRACKET        reduce using rule 8 (inst -> assign COLON .)


state 19

    (25) inst -> PRINT LPAREN . expression RPAREN COLON
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 26

state 20

    (6) increment -> NAME PLUS . PLUS
    (7) add_assign -> NAME PLUS . EQUAL expression

    PLUS            shift and go to state 29
    EQUAL           shift and go to state 30


state 21

    (9) assign -> NAME EQUAL . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 31

state 22

    (12) while -> WHILE LPAREN . condition RPAREN b_bloc
    (16) condition -> . expression EQUALS expression
    (17) condition -> . expression LOWER expression
    (18) condition -> . expression HIGHER expression
    (19) condition -> . expression OR expression
    (20) condition -> . expression AND expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    condition                      shift and go to state 32
    expression                     shift and go to state 33

state 23

    (13) for -> FOR LPAREN . assign COLON condition COLON increment RPAREN b_bloc
    (9) assign -> . NAME EQUAL expression

    NAME            shift and go to state 35

    assign                         shift and go to state 34

state 24

    (15) if -> IF LPAREN . condition RPAREN b_bloc
    (16) condition -> . expression EQUALS expression
    (17) condition -> . expression LOWER expression
    (18) condition -> . expression HIGHER expression
    (19) condition -> . expression OR expression
    (20) condition -> . expression AND expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    condition                      shift and go to state 36
    expression                     shift and go to state 33

state 25

    (27) expression -> LPAREN . expression RPAREN
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 37

state 26

    (25) inst -> PRINT LPAREN expression . RPAREN COLON
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          shift and go to state 38
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 27

    (28) expression -> NUMBER .

    RPAREN          reduce using rule 28 (expression -> NUMBER .)
    PLUS            reduce using rule 28 (expression -> NUMBER .)
    TIMES           reduce using rule 28 (expression -> NUMBER .)
    DIVIDE          reduce using rule 28 (expression -> NUMBER .)
    MINUS           reduce using rule 28 (expression -> NUMBER .)
    COLON           reduce using rule 28 (expression -> NUMBER .)
    EQUALS          reduce using rule 28 (expression -> NUMBER .)
    LOWER           reduce using rule 28 (expression -> NUMBER .)
    HIGHER          reduce using rule 28 (expression -> NUMBER .)
    OR              reduce using rule 28 (expression -> NUMBER .)
    AND             reduce using rule 28 (expression -> NUMBER .)


state 28

    (29) expression -> NAME .

    RPAREN          reduce using rule 29 (expression -> NAME .)
    PLUS            reduce using rule 29 (expression -> NAME .)
    TIMES           reduce using rule 29 (expression -> NAME .)
    DIVIDE          reduce using rule 29 (expression -> NAME .)
    MINUS           reduce using rule 29 (expression -> NAME .)
    COLON           reduce using rule 29 (expression -> NAME .)
    EQUALS          reduce using rule 29 (expression -> NAME .)
    LOWER           reduce using rule 29 (expression -> NAME .)
    HIGHER          reduce using rule 29 (expression -> NAME .)
    OR              reduce using rule 29 (expression -> NAME .)
    AND             reduce using rule 29 (expression -> NAME .)


state 29

    (6) increment -> NAME PLUS PLUS .

    COLON           reduce using rule 6 (increment -> NAME PLUS PLUS .)
    RPAREN          reduce using rule 6 (increment -> NAME PLUS PLUS .)


state 30

    (7) add_assign -> NAME PLUS EQUAL . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 43

state 31

    (9) assign -> NAME EQUAL expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    COLON           reduce using rule 9 (assign -> NAME EQUAL expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 32

    (12) while -> WHILE LPAREN condition . RPAREN b_bloc

    RPAREN          shift and go to state 44


state 33

    (16) condition -> expression . EQUALS expression
    (17) condition -> expression . LOWER expression
    (18) condition -> expression . HIGHER expression
    (19) condition -> expression . OR expression
    (20) condition -> expression . AND expression
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    EQUALS          shift and go to state 45
    LOWER           shift and go to state 46
    HIGHER          shift and go to state 47
    OR              shift and go to state 48
    AND             shift and go to state 49
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 34

    (13) for -> FOR LPAREN assign . COLON condition COLON increment RPAREN b_bloc

    COLON           shift and go to state 50


state 35

    (9) assign -> NAME . EQUAL expression

    EQUAL           shift and go to state 21


state 36

    (15) if -> IF LPAREN condition . RPAREN b_bloc

    RPAREN          shift and go to state 51


state 37

    (27) expression -> LPAREN expression . RPAREN
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 38

    (25) inst -> PRINT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 53


state 39

    (21) expression -> expression PLUS . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 54

state 40

    (22) expression -> expression TIMES . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 55

state 41

    (23) expression -> expression DIVIDE . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 56

state 42

    (24) expression -> expression MINUS . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 57

state 43

    (7) add_assign -> NAME PLUS EQUAL expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    COLON           reduce using rule 7 (add_assign -> NAME PLUS EQUAL expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 44

    (12) while -> WHILE LPAREN condition RPAREN . b_bloc
    (26) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 59

    b_bloc                         shift and go to state 58

state 45

    (16) condition -> expression EQUALS . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 60

state 46

    (17) condition -> expression LOWER . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 61

state 47

    (18) condition -> expression HIGHER . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 62

state 48

    (19) condition -> expression OR . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 63

state 49

    (20) condition -> expression AND . expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    expression                     shift and go to state 64

state 50

    (13) for -> FOR LPAREN assign COLON . condition COLON increment RPAREN b_bloc
    (16) condition -> . expression EQUALS expression
    (17) condition -> . expression LOWER expression
    (18) condition -> . expression HIGHER expression
    (19) condition -> . expression OR expression
    (20) condition -> . expression AND expression
    (21) expression -> . expression PLUS expression
    (22) expression -> . expression TIMES expression
    (23) expression -> . expression DIVIDE expression
    (24) expression -> . expression MINUS expression
    (27) expression -> . LPAREN expression RPAREN
    (28) expression -> . NUMBER
    (29) expression -> . NAME

    LPAREN          shift and go to state 25
    NUMBER          shift and go to state 27
    NAME            shift and go to state 28

    condition                      shift and go to state 65
    expression                     shift and go to state 33

state 51

    (15) if -> IF LPAREN condition RPAREN . b_bloc
    (26) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 59

    b_bloc                         shift and go to state 66

state 52

    (27) expression -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 27 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 27 (expression -> LPAREN expression RPAREN .)


state 53

    (25) inst -> PRINT LPAREN expression RPAREN COLON .

    PRINT           reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    NAME            reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)
    RBRACKET        reduce using rule 25 (inst -> PRINT LPAREN expression RPAREN COLON .)


state 54

    (21) expression -> expression PLUS expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 21 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 21 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 21 (expression -> expression PLUS expression .)
    COLON           reduce using rule 21 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 21 (expression -> expression PLUS expression .)
    LOWER           reduce using rule 21 (expression -> expression PLUS expression .)
    HIGHER          reduce using rule 21 (expression -> expression PLUS expression .)
    OR              reduce using rule 21 (expression -> expression PLUS expression .)
    AND             reduce using rule 21 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 42 ]


state 55

    (22) expression -> expression TIMES expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 22 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 22 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 22 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 22 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 22 (expression -> expression TIMES expression .)
    COLON           reduce using rule 22 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 22 (expression -> expression TIMES expression .)
    LOWER           reduce using rule 22 (expression -> expression TIMES expression .)
    HIGHER          reduce using rule 22 (expression -> expression TIMES expression .)
    OR              reduce using rule 22 (expression -> expression TIMES expression .)
    AND             reduce using rule 22 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 56

    (23) expression -> expression DIVIDE expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 23 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 23 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 23 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 23 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 23 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 23 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 23 (expression -> expression DIVIDE expression .)
    LOWER           reduce using rule 23 (expression -> expression DIVIDE expression .)
    HIGHER          reduce using rule 23 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 23 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 23 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 39 ]
  ! TIMES           [ shift and go to state 40 ]
  ! DIVIDE          [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 57

    (24) expression -> expression MINUS expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    COLON           reduce using rule 24 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 24 (expression -> expression MINUS expression .)
    LOWER           reduce using rule 24 (expression -> expression MINUS expression .)
    HIGHER          reduce using rule 24 (expression -> expression MINUS expression .)
    OR              reduce using rule 24 (expression -> expression MINUS expression .)
    AND             reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 39 ]
  ! MINUS           [ shift and go to state 42 ]


state 58

    (12) while -> WHILE LPAREN condition RPAREN b_bloc .

    PRINT           reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    NAME            reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    WHILE           reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    FOR             reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    IF              reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    $end            reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)
    RBRACKET        reduce using rule 12 (while -> WHILE LPAREN condition RPAREN b_bloc .)


state 59

    (26) b_bloc -> LBRACKET . linst RBRACKET
    (2) linst -> . linst inst
    (3) linst -> . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . while
    (11) inst -> . for
    (14) inst -> . if
    (25) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression
    (12) while -> . WHILE LPAREN condition RPAREN b_bloc
    (13) for -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (15) if -> . IF LPAREN condition RPAREN b_bloc

    PRINT           shift and go to state 10
    NAME            shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14

    linst                          shift and go to state 67
    inst                           shift and go to state 3
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9

state 60

    (16) condition -> expression EQUALS expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 16 (condition -> expression EQUALS expression .)
    COLON           reduce using rule 16 (condition -> expression EQUALS expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 61

    (17) condition -> expression LOWER expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 17 (condition -> expression LOWER expression .)
    COLON           reduce using rule 17 (condition -> expression LOWER expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 62

    (18) condition -> expression HIGHER expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 18 (condition -> expression HIGHER expression .)
    COLON           reduce using rule 18 (condition -> expression HIGHER expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 63

    (19) condition -> expression OR expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 19 (condition -> expression OR expression .)
    COLON           reduce using rule 19 (condition -> expression OR expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 64

    (20) condition -> expression AND expression .
    (21) expression -> expression . PLUS expression
    (22) expression -> expression . TIMES expression
    (23) expression -> expression . DIVIDE expression
    (24) expression -> expression . MINUS expression

    RPAREN          reduce using rule 20 (condition -> expression AND expression .)
    COLON           reduce using rule 20 (condition -> expression AND expression .)
    PLUS            shift and go to state 39
    TIMES           shift and go to state 40
    DIVIDE          shift and go to state 41
    MINUS           shift and go to state 42


state 65

    (13) for -> FOR LPAREN assign COLON condition . COLON increment RPAREN b_bloc

    COLON           shift and go to state 68


state 66

    (15) if -> IF LPAREN condition RPAREN b_bloc .

    PRINT           reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    NAME            reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    WHILE           reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    FOR             reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    IF              reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    $end            reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)
    RBRACKET        reduce using rule 15 (if -> IF LPAREN condition RPAREN b_bloc .)


state 67

    (26) b_bloc -> LBRACKET linst . RBRACKET
    (2) linst -> linst . inst
    (4) inst -> . increment COLON
    (5) inst -> . add_assign COLON
    (8) inst -> . assign COLON
    (10) inst -> . while
    (11) inst -> . for
    (14) inst -> . if
    (25) inst -> . PRINT LPAREN expression RPAREN COLON
    (6) increment -> . NAME PLUS PLUS
    (7) add_assign -> . NAME PLUS EQUAL expression
    (9) assign -> . NAME EQUAL expression
    (12) while -> . WHILE LPAREN condition RPAREN b_bloc
    (13) for -> . FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc
    (15) if -> . IF LPAREN condition RPAREN b_bloc

    RBRACKET        shift and go to state 69
    PRINT           shift and go to state 10
    NAME            shift and go to state 11
    WHILE           shift and go to state 12
    FOR             shift and go to state 13
    IF              shift and go to state 14

    inst                           shift and go to state 15
    increment                      shift and go to state 4
    add_assign                     shift and go to state 5
    assign                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9

state 68

    (13) for -> FOR LPAREN assign COLON condition COLON . increment RPAREN b_bloc
    (6) increment -> . NAME PLUS PLUS

    NAME            shift and go to state 71

    increment                      shift and go to state 70

state 69

    (26) b_bloc -> LBRACKET linst RBRACKET .

    PRINT           reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    NAME            reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    WHILE           reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    FOR             reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    IF              reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    $end            reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)
    RBRACKET        reduce using rule 26 (b_bloc -> LBRACKET linst RBRACKET .)


state 70

    (13) for -> FOR LPAREN assign COLON condition COLON increment . RPAREN b_bloc

    RPAREN          shift and go to state 72


state 71

    (6) increment -> NAME . PLUS PLUS

    PLUS            shift and go to state 73


state 72

    (13) for -> FOR LPAREN assign COLON condition COLON increment RPAREN . b_bloc
    (26) b_bloc -> . LBRACKET linst RBRACKET

    LBRACKET        shift and go to state 59

    b_bloc                         shift and go to state 74

state 73

    (6) increment -> NAME PLUS . PLUS

    PLUS            shift and go to state 29


state 74

    (13) for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .

    PRINT           reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    NAME            reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    WHILE           reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    FOR             reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    IF              reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    $end            reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)
    RBRACKET        reduce using rule 13 (for -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc .)

