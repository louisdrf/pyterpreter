
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSLOWERHIGHERleftPLUSMINUSleftTIMESDIVIDEAND COLON COMMA DIVIDE EQUAL EQUALS FOR FUNCTION HIGHER IF LBRACKET LOWER LPAREN MINUS NAME NUMBER OR PLUS PRINT RBRACKET RETURN RPAREN THEN TIMES WHILE start : linstlinst : linst inst \n            | inst inst : increment COLON\n            | decrement COLONinst : operator_assign COLONincrement : NAME PLUS PLUSdecrement : NAME MINUS MINUSoperator_assign : NAME operator EQUAL expressioninst : assign COLONassign : NAME EQUAL expressioninst : WHILE LPAREN condition RPAREN b_blocinst : FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc\n    | FOR LPAREN assign COLON condition COLON operator_assign RPAREN b_bloc\n    | FOR LPAREN assign COLON condition COLON decrement RPAREN b_blocinst : IF LPAREN condition RPAREN b_bloccondition : expression EQUALS expression\n                 | expression LOWER expression\n                 | expression HIGHER expression\n                 | expression OR expression\n                 | expression AND expressionexpression : expression PLUS expressionexpression : expression TIMES expressionexpression : expression DIVIDE expressionexpression : expression MINUS expressioninst : FUNCTION NAME LPAREN params RPAREN b_blocparams : NAME COMMA params \n              | NAMEinst : NAME LPAREN call_params RPAREN COLONcall_params : expression COMMA call_params \n                   | expressioninst : PRINT LPAREN expression RPAREN COLONb_bloc : LBRACKET linst RBRACKEToperator : PLUS\n                | MINUS\n                | DIVIDE\n                | TIMESexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'WHILE':([0,2,3,14,15,16,17,18,67,68,79,82,84,85,88,89,97,98,99,],[8,8,-3,-2,-4,-5,-6,-10,-12,8,-16,-29,-32,8,-26,-33,-13,-14,-15,]),'FOR':([0,2,3,14,15,16,17,18,67,68,79,82,84,85,88,89,97,98,99,],[9,9,-3,-2,-4,-5,-6,-10,-12,9,-16,-29,-32,9,-26,-33,-13,-14,-15,]),'IF':([0,2,3,14,15,16,17,18,67,68,79,82,84,85,88,89,97,98,99,],[10,10,-3,-2,-4,-5,-6,-10,-12,10,-16,-29,-32,10,-26,-33,-13,-14,-15,]),'FUNCTION':([0,2,3,14,15,16,17,18,67,68,79,82,84,85,88,89,97,98,99,],[11,11,-3,-2,-4,-5,-6,-10,-12,11,-16,-29,-32,11,-26,-33,-13,-14,-15,]),'NAME':([0,2,3,11,14,15,16,17,18,19,20,21,23,27,30,31,39,44,49,50,51,52,53,54,55,56,57,58,63,67,68,79,80,82,84,85,86,88,89,97,98,99,],[12,12,-3,22,-2,-4,-5,-6,-10,35,37,35,35,35,35,35,60,35,35,35,35,35,35,35,35,35,35,35,35,-12,12,-16,60,-29,-32,12,93,-26,-33,-13,-14,-15,]),'PRINT':([0,2,3,14,15,16,17,18,67,68,79,82,84,85,88,89,97,98,99,],[13,13,-3,-2,-4,-5,-6,-10,-12,13,-16,-29,-32,13,-26,-33,-13,-14,-15,]),'$end':([1,2,3,14,15,16,17,18,67,79,82,84,88,89,97,98,99,],[0,-1,-3,-2,-4,-5,-6,-10,-12,-16,-29,-32,-26,-33,-13,-14,-15,]),'RBRACKET':([3,14,15,16,17,18,67,79,82,84,85,88,89,97,98,99,],[-3,-2,-4,-5,-6,-10,-12,-16,-29,-32,89,-26,-33,-13,-14,-15,]),'COLON':([4,5,6,7,34,35,36,42,43,45,62,64,65,66,69,70,71,72,73,74,75,76,77,78,],[15,16,17,18,-39,-40,58,-7,-8,-11,82,-9,84,-38,-17,-18,-19,-20,-21,-22,-23,-24,-25,86,]),'LPAREN':([8,9,10,12,13,19,21,22,23,27,30,31,44,49,50,51,52,53,54,55,56,57,58,63,],[19,20,21,23,30,31,31,39,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'PLUS':([12,24,33,34,35,41,45,46,47,64,66,69,70,71,72,73,74,75,76,77,93,],[24,42,54,-39,-40,54,54,54,54,54,-38,54,54,54,54,54,-22,-23,-24,-25,24,]),'MINUS':([12,25,33,34,35,41,45,46,47,64,66,69,70,71,72,73,74,75,76,77,93,],[25,43,57,-39,-40,57,57,57,57,57,-38,57,57,57,57,57,-22,-23,-24,-25,25,]),'EQUAL':([12,24,25,26,28,29,37,],[27,-34,-35,44,-36,-37,27,]),'DIVIDE':([12,33,34,35,41,45,46,47,64,66,69,70,71,72,73,74,75,76,77,93,],[28,56,-39,-40,56,56,56,56,56,-38,56,56,56,56,56,56,-23,-24,56,28,]),'TIMES':([12,33,34,35,41,45,46,47,64,66,69,70,71,72,73,74,75,76,77,93,],[29,55,-39,-40,55,55,55,55,55,-38,55,55,55,55,55,55,-23,-24,55,29,]),'NUMBER':([19,21,23,27,30,31,44,49,50,51,52,53,54,55,56,57,58,63,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RPAREN':([32,34,35,38,40,41,42,43,46,47,60,61,64,66,69,70,71,72,73,74,75,76,77,83,87,90,91,92,],[48,-39,-40,59,62,-31,-7,-8,65,66,-28,81,-9,-38,-17,-18,-19,-20,-21,-22,-23,-24,-25,-30,-27,94,95,96,]),'EQUALS':([33,34,35,66,74,75,76,77,],[49,-39,-40,-38,-22,-23,-24,-25,]),'LOWER':([33,34,35,66,74,75,76,77,],[50,-39,-40,-38,-22,-23,-24,-25,]),'HIGHER':([33,34,35,66,74,75,76,77,],[51,-39,-40,-38,-22,-23,-24,-25,]),'OR':([33,34,35,66,74,75,76,77,],[52,-39,-40,-38,-22,-23,-24,-25,]),'AND':([33,34,35,66,74,75,76,77,],[53,-39,-40,-38,-22,-23,-24,-25,]),'COMMA':([34,35,41,60,66,74,75,76,77,],[-39,-40,63,80,-38,-22,-23,-24,-25,]),'LBRACKET':([48,59,81,94,95,96,],[68,68,68,68,68,68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'linst':([0,68,],[2,85,]),'inst':([0,2,68,85,],[3,14,3,14,]),'increment':([0,2,68,85,86,],[4,4,4,4,90,]),'decrement':([0,2,68,85,86,],[5,5,5,5,92,]),'operator_assign':([0,2,68,85,86,],[6,6,6,6,91,]),'assign':([0,2,20,68,85,],[7,7,36,7,7,]),'operator':([12,93,],[26,26,]),'condition':([19,21,58,],[32,38,78,]),'expression':([19,21,23,27,30,31,44,49,50,51,52,53,54,55,56,57,58,63,],[33,33,41,45,46,47,64,69,70,71,72,73,74,75,76,77,33,41,]),'call_params':([23,63,],[40,83,]),'params':([39,80,],[61,87,]),'b_bloc':([48,59,81,94,95,96,],[67,79,88,97,98,99,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> linst','start',1,'p_start','interpreter.py',80),
  ('linst -> linst inst','linst',2,'p_line','interpreter.py',198),
  ('linst -> inst','linst',1,'p_line','interpreter.py',199),
  ('inst -> increment COLON','inst',2,'p_statement_increment_decrement','interpreter.py',211),
  ('inst -> decrement COLON','inst',2,'p_statement_increment_decrement','interpreter.py',212),
  ('inst -> operator_assign COLON','inst',2,'p_statement_add_assign','interpreter.py',216),
  ('increment -> NAME PLUS PLUS','increment',3,'p_expression_increment','interpreter.py',221),
  ('decrement -> NAME MINUS MINUS','decrement',3,'p_expression_decrement','interpreter.py',225),
  ('operator_assign -> NAME operator EQUAL expression','operator_assign',4,'p_expression_operator_assign','interpreter.py',229),
  ('inst -> assign COLON','inst',2,'p_statement_assign','interpreter.py',237),
  ('assign -> NAME EQUAL expression','assign',3,'p_expression_assign','interpreter.py',242),
  ('inst -> WHILE LPAREN condition RPAREN b_bloc','inst',5,'p_statement_while','interpreter.py',250),
  ('inst -> FOR LPAREN assign COLON condition COLON increment RPAREN b_bloc','inst',9,'p_statement_for','interpreter.py',254),
  ('inst -> FOR LPAREN assign COLON condition COLON operator_assign RPAREN b_bloc','inst',9,'p_statement_for','interpreter.py',255),
  ('inst -> FOR LPAREN assign COLON condition COLON decrement RPAREN b_bloc','inst',9,'p_statement_for','interpreter.py',256),
  ('inst -> IF LPAREN condition RPAREN b_bloc','inst',5,'p_expression_if','interpreter.py',262),
  ('condition -> expression EQUALS expression','condition',3,'p_expression_condition','interpreter.py',267),
  ('condition -> expression LOWER expression','condition',3,'p_expression_condition','interpreter.py',268),
  ('condition -> expression HIGHER expression','condition',3,'p_expression_condition','interpreter.py',269),
  ('condition -> expression OR expression','condition',3,'p_expression_condition','interpreter.py',270),
  ('condition -> expression AND expression','condition',3,'p_expression_condition','interpreter.py',271),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','interpreter.py',278),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','interpreter.py',282),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide','interpreter.py',286),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_minus','interpreter.py',290),
  ('inst -> FUNCTION NAME LPAREN params RPAREN b_bloc','inst',6,'p_statement_function_void','interpreter.py',298),
  ('params -> NAME COMMA params','params',3,'p_expression_params','interpreter.py',302),
  ('params -> NAME','params',1,'p_expression_params','interpreter.py',303),
  ('inst -> NAME LPAREN call_params RPAREN COLON','inst',5,'p_statement_call_function_void','interpreter.py',313),
  ('call_params -> expression COMMA call_params','call_params',3,'p_expression_call_params','interpreter.py',317),
  ('call_params -> expression','call_params',1,'p_expression_call_params','interpreter.py',318),
  ('inst -> PRINT LPAREN expression RPAREN COLON','inst',5,'p_statement_print','interpreter.py',327),
  ('b_bloc -> LBRACKET linst RBRACKET','b_bloc',3,'p_expression_bracket_bloc','interpreter.py',333),
  ('operator -> PLUS','operator',1,'p_expression_operator','interpreter.py',337),
  ('operator -> MINUS','operator',1,'p_expression_operator','interpreter.py',338),
  ('operator -> DIVIDE','operator',1,'p_expression_operator','interpreter.py',339),
  ('operator -> TIMES','operator',1,'p_expression_operator','interpreter.py',340),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','interpreter.py',344),
  ('expression -> NUMBER','expression',1,'p_expression_number','interpreter.py',348),
  ('expression -> NAME','expression',1,'p_expression_name','interpreter.py',352),
]
